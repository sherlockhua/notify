openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: ''
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://sdk.metaphysics.io/api/v3
tags:
  - name: task
    description: 任务信息
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /task:
    post:
      tags:
        - task
      summary: 创建任务
      description: 创建任务
      operationId: createTask
      requestBody:
        description: create a new task 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskResult'          
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateTaskResult'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:task
            - read:task
    get:
      tags:
        - task
      summary: 获取任务
      description: 获取任务
      operationId: getTask
      parameters:
        - name: taskId
          in: query
          description: taskId 
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskResult'          
            application/xml:
              schema:
                $ref: '#/components/schemas/GetTaskResult'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:task
            - read:task
    delete:
      tags:
        - task
      summary: 获取任务
      description: 获取任务
      operationId: deleteTask
      parameters:
        - name: taskId
          in: query
          description: taskId 
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTaskResult'          
            application/xml:
              schema:
                $ref: '#/components/schemas/DeleteTaskResult'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:task
            - read:task
    put:
      tags:
        - task
      summary: 更新任务
      description: 更新任务
      operationId: updateTask
      requestBody:
        description: create a new task 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskResult'          
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateTaskResult'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:task
            - read:task
  /task/list:
    get:
      tags:
        - task
      summary: get all task list
      description: get all task list
      operationId: getTaskList
      parameters:
        - name: offset
          in: query
          description: offset 
          required: false
          explode: true
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: size 
          required: false
          explode: true
          schema:
            type: integer
            default: 10   
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskListResult'          
            application/xml:
              schema:
                $ref: '#/components/schemas/GetTaskListResult'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:record
            - read:record
components:
  schemas:
    CreateTaskResult:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 10
        message:
          type: string
          example: message
        taskId:
          type: string
    GetTaskListResult:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 0
        message:
          type: string
          example: message
        tasks:
          type: array
          xml:
            name: record
            wrapped: true
          items:
            $ref: '#/components/schemas/Task'
    GetTaskResult:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 0
        message:
          type: string
          example: message
        task:
          $ref: '#/components/schemas/Task'
    DeleteTaskResult:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 0
        message:
          type: string
          example: message
    UpdateTaskResult:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 0
        message:
          type: string
          example: message
    Task:
      required:
        - username
        - birthday
      type: object
      properties:
        taskId: 
          type: string
        taskName:
          type: string
        taskDesc:
          type: string
        createTime:
          type: string
        taskStatus:
          type: integer
        taskType:
          type: integer
        notifyType:
          type: integer
        notifyTime:
          type: string
        notifyBeforeTime:
          type: integer
      xml:
        name: task
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header

